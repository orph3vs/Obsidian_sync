서버 주소: 192.168.0.76:5500

[개인정보 강의 계획]

 - 1주차: 개인정보 가명익명처리 기본 기술 익히기, OpenCV 기반 비전 기술 이해
         -> 개인정보 비식별 챌린지 1
 - 2주차: 딥러닝 기반 비전 기술 이해, 비전 기반 비식별 처리 기술
         -> 개인정보 비식별 챌린지 2


[1일차]

 - 개인정보와 비식별 기본 이론
 - 개인정보보호 이해
 - 실습: 개인정보 검색
 - 실습: 개인정보 삭제


1. AI 학습의 두가지 목표
 - discriminative model: 판단
 - generative model: 생성








실습 시작 전 설치해야 할 도구
  - 도커 Desktop
     -> wsl 에러나는 사람
        : 시작메뉴에서 powershell 실행
        : wsl --install
  - Python anaconda
  - Dbeaver
 
  - 다 되신 분들은 서버에서 '1. 데이터셋 생성.zip' 파일을 
  다운로드 하신 후 압축해제 해 주세요

1. 환경 세팅
 = 도커 실행: de-identification 폴더 내에서 docker-compose up --build -d
 = 도커 동작 확인: docker ps
 = 도커 접속: docker exec -it privacy /bin/bash
 = DB 연결: mysql -u root -p                       (pw: root1234)

  show databses;
  use privacy;
  show tables;
  select * from users; 

db/conf.d/my.cnf 파일을 읽기전용 설정

주민등록번호: (\d{6}[ ,-]-?[1-4]\d{6})|(\d{6}[ ,-]?[1-4])
운전면허번호: (\d{2}-\d{2}-\d{6}-\d{2})
성명: ^[가-힣]{2,4}
주소: ((([가-힣]+(\d{1,5}|\d{1,5}(,|.)\d{1,5}|)+(읍|면|동|가|리))(^구|)((\d{1,5}(~|-)\d{1,5}|\d{1,5})(가|리|)|))([](산(\d{1,5}(~|-)\d{1,5}|\d{1,5}))|)|(([가-힣]|(\d{1,5}(~|-)\d{1,5})|\d{1,5})+(로|길)))
나이/생년월일: (\d{0,4}(년생|월생|세|살))
전화번호: (\d{2,3}[ ,-]-?\d{2,4}[ ,-]-?\d{4})
계좌번호: ^(\d{1,})(-(\d{1,})){1,}
자동차번호
서울12가1234: ^[가-힣]{2}\d{2}[가-힣]{1}\d{4}$
12가1234: ^\d{2}[가-힣]{1}\d{4}$
123가1234: ^\d{3}[가-힣]{1}\d{4}$
셋 중 하나 = (^[가-힣]{2}\d{2}[가-힣]{1}\d{4}$|^\d{2}[가-힣]{1}\d{4}$|^\d{3}[가-힣]{1}\d{4}$)
이메일주소: (([\w!-_\.])*@([\w!-_\.])*\.[\w]{2,3})
홈페이지 URL: https?://(\w*:\w*@)?[-\w.]+(:\d+)?(/([\w/_.]*(\?\S+)?)?)?
사업자등록번호: ^(\d{3,3})+[-]+(\d{2,2})+[-]+(\d{5,5})

신용카드번호: 정규표현식만으로 신용카드 번호를 완전히 검증하지는 못하지만 정규표현식 검증으로 카드 ㅂ너호의 숫자가 많거나 적은 경우처럼 잘못된 숫자를 검출하는데 유용함
예시)
마스터카드: 첫 숫자는 항상 5이며, 두 번째 숫자는 1-5 => 5[1-5]\d{14}
비자카드: 4로 시작을 하고 열세 자리나 열여섯 자리 숫자 => 4\d{12}(\d{3})?
아메리칸 익스프레스: 34나 37로 시작해 열세자리 숫자 => 3[47]\d{13}

1845238185221232


with zipfile.ZipFile('샘플문서_수정.docx', 'w', zipfile.ZIP_DEFLATED) as zipf:
    for root, dirs, files in os.walk('./'):
        for file in files:
            to_read = os.path.join(root, file)
            print("to read", to_read)

            if ".docx" not in to_read and ".py" not in to_read:
                zipf.write(os.path.join(root, file), to_read[5:])


1. 문서에서 이메일 주소와 차량번호를 찾아서 대체하는 코드를 작성해 보세요. 
    - 이메일 주소: adfd@sadf.com -> '*@*'
    - 차량번호: '<삭제됨>'
    
오늘의 핵심 키워드
 - 개인정보, 가명정보, 익명정보, 추가정보, PbD

욕심내는 키워드 = 개념 이해 + 정리
 - k-익명성, l-다양성... 

실습 흐름: 데이터(개인정보) 생명주기 기준으로 진행
 수집 - 저장 - 이용 또는 제공 - 폐기

숙제: 워드문서 안의 개인정보 비식별 처리해보기!